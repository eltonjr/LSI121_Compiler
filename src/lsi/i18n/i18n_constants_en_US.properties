about=About
actionAction=Action \#
actionToken=, Token: 
alreadyDeclared=\ already declared
andHas=\ and has 
at=\ at 
begin=begin
charLongerThanAllowed=Char longer than allowed
compiler=Compiler
constIdExpected=Const id expected
constIntExpected=Int id expected
constShouldBeIntOrChar=Const should be int or char
english=English
errorAt=Error at 
exit=Exit
expected=Was expected 
file=File
funcDoesntHasReturn=Function does not has return
id=Id 
idAlreadyDeclared=Id already declared
idNotDeclared=Id not declared
idShouldBeFunc=ID should be function
idShouldBeProc=ID should be procedure
idShouldBeVarParamOrFunc=ID should be Var, Param or Function
invalidConstType=Invalid constant type
invalidExpressionType=Invalid expression type
invalidIndexType=Invalid index type
invalid=\ invalid
invalidInt=Invalid interval
invalidPrintingType=Invalid printing type
language=Language
lexical=Lexical
mathSignRequiresNum=Math sign '+/-' requires number
needs=\ needs 
noErrors=No errors
nonExistantParam=Nonexistant parameter
notOperatorError=Operator 'nao' consecutive
notOperatorRequiresBoolean=Operator 'nao' requires boolean
onlyVectorsAndStringsCanBeIndexed=Only vectors and strings can be indexed
operandMismatch=Operand mismatch
operator-operandMismatch=Operator-operand mismatch
operatorMismatch=Operator mismatch
outsideFunction=Outside function
paramSizeError=Parameters size error
portuguese=Portuguese
rulesMessage1=[Rules] isCompativelComOperador : operador=
rulesMessage2=\ operand=
semantic=Semantic
stringLongerThanExpected=String longer than expected
syntax=Syntax
typeMismatch=Type mismatch
unaryOperatorError=Unary operators consecutive
unexpectedChar=Unexpected char
varExpected=Var expected
varFuncOrConstExpected=Var, Function or Constant expected
vectorMustBeIndexed=Vector should be indexed
vectorSizeMustBeInt=Vector size should be int
verify=Verify
